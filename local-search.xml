<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>java_basic_grammar</title>
    <link href="/2021/03/21/java-basic-grammar/"/>
    <url>/2021/03/21/java-basic-grammar/</url>
    
    <content type="html"><![CDATA[<h2 id="java基本语法"><a href="#java基本语法" class="headerlink" title="java基本语法"></a>java基本语法</h2><h2 id="标识符的命名规则"><a href="#标识符的命名规则" class="headerlink" title="标识符的命名规则"></a>标识符的命名规则</h2><ul><li>由26个大小写英文字母，0-9，_或$组成</li><li>数字不可以开头</li><li>不可以使用关键字和保留字，但能包含关键字和保留字</li><li>Java中严格区分大小写，长度无限制</li><li>标识符不能包含空格<h2 id="Java中的名称命名规范"><a href="#Java中的名称命名规范" class="headerlink" title="Java中的名称命名规范"></a>Java中的名称命名规范</h2></li><li>包名：多单词组成是所有字母都小写: xxxxyyyyyzzzz</li><li>类名、接口名：多单词组成时，所有单词的首字母大写：XxxxYyyyyZzzz</li><li>变量名、方法名：多单词组成时，第一个单词首字母小写，第二个单词开始每个单词的首字母都大写</li><li>常量名：所有字母都大写，多单词时每个单词用下划线连续:  XXX_YYY_ZZZ<h2 id="Java变量的使用"><a href="#Java变量的使用" class="headerlink" title="Java变量的使用"></a>Java变量的使用</h2></li><li>必须是要先声明、赋值之后，才可以使用。否则编译不通过</li><li>变量只能在作用域内起作用。<h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><h3 id="基本数据类型"><a href="#基本数据类型" class="headerlink" title="基本数据类型"></a>基本数据类型</h3></li><li>整型：byte short int long     其中 long型赋值是须加上“l”或者“L”，若没加，则被机器识别为int型，但编译不会报错：例如 ：long a=1234 </li><li>浮点型： float double  其中float型赋值时必须加上“f”或者“F”，若没加，编译报错</li><li>字符型： char:    cahr c = ‘a’ –&gt; c=97      cahr c = ‘A’ –&gt; c=65</li><li>布尔型： Boolean：true/flase<br>特别的：整型常量 默认类型为int型，浮点型常量 默认类型为double型：例如：byte b = 12; byte b1 = b + 1;(会发生编译失败)–&gt;应改为 int b1= b + 1<br>浮点的例子类似<h3 id="引用数据类型"><a href="#引用数据类型" class="headerlink" title="引用数据类型"></a>引用数据类型</h3></li><li>String：</li><li>声明String类型的变量时。使用一对双引号“”<br>例：String s1 = “hello world”;<br>String s2 = “a”;<br>String s3 = “”; 三种都可以<br>与char相比 ,char c = ‘ ‘ 可以，但 char c =’’不可以，编译不通过</li><li>String可以和8种数据类型变量做运算，且运算只能是连接运算,通过+来连接 ，运算的结果仍是String类型 例如练习1</li><li>注意：当String和其他类型的变量做运算时，要区分“+”是代表加法运算还是连接运算：例如练习2和3<figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java"><span class="hljs-comment">//练习1</span><br><span class="hljs-keyword">int</span> number = <span class="hljs-number">1001</span>;<br>String numberStr = <span class="hljs-string">&quot;学号：&quot;</span>；<br>String info = numberStr + number;<span class="hljs-comment">// +：连接运算</span><br>Boolean b1 = <span class="hljs-keyword">true</span>;<br>String info1 = info + b1;<span class="hljs-comment">//+连接运算</span><br>System.out.println(info1);<span class="hljs-comment">//结果为：“学号：1001true”</span><br>--------------------------------------------------<br><span class="hljs-comment">//练习2</span><br><span class="hljs-keyword">char</span> c = <span class="hljs-string">&#x27;a&#x27;</span>;<br><span class="hljs-keyword">int</span> num = <span class="hljs-number">10</span>;<br>String str = <span class="hljs-string">&quot;hello&quot;</span>;<br>System.out.println(c + num + str);<span class="hljs-comment">//结果：107hello</span><br>System.out.println(c + str + num);<span class="hljs-comment">//结果：ahello10</span><br>----------------------------------------------------<br><span class="hljs-comment">//练习3</span><br>System.out.println(<span class="hljs-string">&quot;*   *&quot;</span>);<span class="hljs-comment">//结果：*  *</span><br>System.out.println(<span class="hljs-string">&#x27;*&#x27;</span> + <span class="hljs-string">&#x27;\t&#x27;</span> + <span class="hljs-string">&#x27;*&#x27;</span>);<span class="hljs-comment">//结果：93  42+9+42</span><br>System.out.println(<span class="hljs-string">&#x27;*&#x27;</span> + <span class="hljs-string">&quot;\t&quot;</span> + <span class="hljs-string">&#x27;*&#x27;</span>);<span class="hljs-comment">//结果:*  *</span><br></code></pre></div></td></tr></table></figure><blockquote><h3 id="自动类型提升"><a href="#自动类型提升" class="headerlink" title="自动类型提升"></a>自动类型提升</h3></blockquote></li><li>结论：当容量小的数据类型的变量与容量大的数据类型的变量做运算时，结果自动提升为容量最大的数据类型。</li><li>-&gt; :  byte(1个字节)、char(2)、short(2)–&gt;int(4)–&gt;long(8)–&gt;float(4)–&gt;double(8)  特别的：当byte、char和short三种类型的变量做运算时，结果为int型。<blockquote><h3 id="强制类型转换："><a href="#强制类型转换：" class="headerlink" title="强制类型转换："></a>强制类型转换：</h3></blockquote></li><li>使用( ) 有可能会损失精度:例如：double a=12.3    double b=(int)a    结果为b=12<h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><h3 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h3></li><li>%： 取余运算：结果的符号与被模数的符号相同</li><li>++、–：自增自减：注意点如下：<figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java"><span class="hljs-keyword">short</span> s1 = <span class="hljs-number">10</span>;<br>s1 = s1 + <span class="hljs-number">1</span>;<span class="hljs-comment">//会编译失败，因为s1加1之后为int型</span><br>s1 = (<span class="hljs-keyword">short</span>)(s1 + <span class="hljs-number">1</span>);<span class="hljs-comment">//编译正确</span><br>s1++;<span class="hljs-comment">//若直接s1++，自增1不会改变本身变量的数据类型</span><br><span class="hljs-comment">//同理：</span><br>s1 += <span class="hljs-number">2</span>;<span class="hljs-comment">//也不会改变变量自身的数据类型</span><br>改变两个变量的值<br><span class="hljs-comment">//方式一：定义临时变量</span><br><span class="hljs-keyword">int</span> num1 = <span class="hljs-number">10</span>,num2 = <span class="hljs-number">20</span>;<br><span class="hljs-keyword">int</span> temp = num1;<br>num1 = num2;<br>num2 = temp;<br><span class="hljs-comment">//方式二：两数相加; 虽然不用定义临时变量，但相加操作    可能会超出储存范围且只能适用于数值类型；</span><br>num1 = num1 + num2;<br>num2 = num1 - num2;<br>num1 =num1 - num2;<br><span class="hljs-comment">//方式三：使用位运算符； 也只能适用于数值类型 ：原理：一个数连续 ^ 上同一个数，结果等于它本身</span><br>num1 = num1 ^ num2;<br>num2 = num1 ^ num2;<br>num1 = num1 ^ num2;<br></code></pre></div></td></tr></table></figure><h2 id="获取一个随机数"><a href="#获取一个随机数" class="headerlink" title="获取一个随机数"></a>获取一个随机数</h2></li><li>获取一个在[a,b]范围的随机数公式： (int)(Math.random() * (b-a+1))+a<br>//如果要取一个[10-99]范围的随机数<br>int a = (int)(Math.random() * 90 +10)<br>break和continue的异同以及特殊情况</li><li>默认情况下：相同点：break和continue都是对最近一层循环起作用<br>不同点：break，跳出最近的整个循环；continue，结束当前循环的一次循环</li><li>特殊情况：可以指定break和continue作用于哪个循环；例子如下：<figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java">table:<span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span> ; i &lt; <span class="hljs-number">3</span> ; i++)&#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span> ; j &lt; i ; j++)&#123;<br>        System.out.println(*);<br>        <span class="hljs-keyword">continue</span> table;<span class="hljs-comment">//结束第一层循环的一次循环</span><br>    &#125;       <br>&#125;<br>table:<span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span> ; i &lt; <span class="hljs-number">3</span> ; i++)&#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span> ; j &lt; i ; j++)&#123;<br>        System.out.println(*);<br>        <span class="hljs-keyword">break</span> table;<span class="hljs-comment">//结束第一层循环</span><br>    &#125;       <br>&#125;<br></code></pre></div></td></tr></table></figure><h2 id="数组的基本操作"><a href="#数组的基本操作" class="headerlink" title="数组的基本操作"></a>数组的基本操作</h2></li><li>数组的复制、反转<figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ArrayTest</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span></span>&#123;<br>        String[] arr = <span class="hljs-keyword">new</span> String[]&#123;<span class="hljs-string">&quot;JJ&quot;</span>,<span class="hljs-string">&quot;DD&quot;</span>,<span class="hljs-string">&quot;MM&quot;</span>,<span class="hljs-string">&quot;BB&quot;</span>,<span class="hljs-string">&quot;GG&quot;</span>,<span class="hljs-string">&quot;AA&quot;</span>&#125;;<br>        <span class="hljs-comment">//数组的复制（区别于数组变量的赋值：arr1=arr）:相当于剪切操作</span><br>        String[] arr1 = <span class="hljs-keyword">new</span> String[arr.length];<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; arr1.length; i++)&#123;<br>            arr1[i] = arr[i];<br>        &#125;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; arr1.length; i++) &#123;<br>            System.out.print(arr1[i]+<span class="hljs-string">&quot; &quot;</span>);<br>        &#125;<br>        <span class="hljs-comment">//数组的反转1</span><br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>;i &lt; arr.length / <span class="hljs-number">2</span>; i++)&#123;<br>            String temp = arr[i];<br>            arr[i] = arr[arr.length - i -<span class="hljs-number">1</span>];<br>            arr[arr.length -i -<span class="hljs-number">1</span>] = temp;<br>        &#125;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; arr.length; i++) &#123;<br>            System.out.print(arr[i]+<span class="hljs-string">&quot; &quot;</span>);<br>        &#125;<br>        <span class="hljs-comment">//数组的反转2</span><br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>, j =arr.length - <span class="hljs-number">1</span>;i &lt; j; i++, j--)&#123;<br>            String temp = arr[i];<br>            arr[i] = arr[j];<br>            arr[j] = temp;<br>        &#125;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; arr.length; i++) &#123;<br>            System.out.print(arr[i]+<span class="hljs-string">&quot;\t&quot;</span>);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure></li><li>数组的二分查找<figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java"><span class="hljs-comment">//二分法查找</span><br><span class="hljs-comment">//前提：所要查找的数组必须有序。</span><br><span class="hljs-keyword">int</span>[] arr2 = <span class="hljs-keyword">new</span> <span class="hljs-keyword">int</span>[]&#123;-<span class="hljs-number">12</span>,-<span class="hljs-number">9</span>,-<span class="hljs-number">3</span>,-<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">45</span>,<span class="hljs-number">102</span>&#125;;<br><span class="hljs-keyword">int</span> dest = -<span class="hljs-number">2</span>;<br><span class="hljs-keyword">int</span> head = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">int</span> end = arr2.length - <span class="hljs-number">1</span>;<br><span class="hljs-keyword">boolean</span> isFlag = <span class="hljs-keyword">true</span>;<br><span class="hljs-keyword">while</span>(head &lt;= end)&#123;<span class="hljs-comment">//注意是 &lt;=</span><br>    <span class="hljs-keyword">int</span> middle = (head + end) / <span class="hljs-number">2</span>;<br>    <span class="hljs-keyword">if</span>(arr2[middle] == dest)&#123;<br>        System.out.println(<span class="hljs-string">&quot;元素找到，其位置为&quot;</span>+ middle);<br>        isFlag = <span class="hljs-keyword">false</span>;<br>        <span class="hljs-keyword">break</span>;<br>    &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(arr2[middle] &lt; dest)&#123;<br>        head = middle + <span class="hljs-number">1</span>;<br>    &#125;<span class="hljs-keyword">else</span><br>        end = middle - <span class="hljs-number">1</span>;<br>&#125;<br><span class="hljs-keyword">if</span>(isFlag)&#123;<br>    System.out.println(<span class="hljs-string">&quot;很遗憾没有找到！&quot;</span>);<br>&#125;<br></code></pre></div></td></tr></table></figure></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>Java基础</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VScode终端填坑</title>
    <link href="/2021/03/03/VScode%E7%BB%88%E7%AB%AF%E5%A1%AB%E5%9D%91/"/>
    <url>/2021/03/03/VScode%E7%BB%88%E7%AB%AF%E5%A1%AB%E5%9D%91/</url>
    
    <content type="html"><![CDATA[<h2 id="问题描述："><a href="#问题描述：" class="headerlink" title="问题描述："></a>问题描述：</h2><ul><li>使用PowerShell时报错：此系统禁止运行脚本<br><img src="https://i.loli.net/2021/03/03/ZUbRfrJay52N1Qg.png" alt="报错样图"></li></ul><hr><h2 id="快速解决方法"><a href="#快速解决方法" class="headerlink" title="快速解决方法:"></a>快速解决方法:</h2><ul><li>在VS code的PowerShell终端输入以下命令即可<figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">Set-ExecutionPolicy RemoteSigned<br></code></pre></div></td></tr></table></figure></li><li>详细解决方案参考<a href="https://go.microsoft.com/fwlink/?LinkID=135170">这里</a></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>VScode PowerShell</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
